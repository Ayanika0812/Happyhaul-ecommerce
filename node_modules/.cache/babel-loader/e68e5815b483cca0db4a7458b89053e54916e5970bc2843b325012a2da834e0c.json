{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twink\\\\OneDrive\\\\Desktop\\\\Mine\\\\Projects\\\\Ecommerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport all_product from '../Components/Assets/all_product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < all_product.length; index++) {\n    cart[all_product[index].id] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: Math.max((prev[itemId] || 0) - 1, 0)\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = useEffect(() => {\n    console.log(\"Updated Cart:\", cartItems);\n  }, [cartItems]);\n  const contextValue = {\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(ShopContextProvider, \"xSTYUeW9r2l1GTZrmHo9ztx/35Y=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","length","id","ShopContextProvider","props","_s","cartItems","setCartItems","addToCart","itemId","prev","removeFromCart","Math","max","getTotalCartAmount","totalAmount","item","itemInfo","find","product","Number","new_price","getTotalCartItems","console","log","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/twink/OneDrive/Desktop/Mine/Projects/Ecommerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport all_product from '../Components/Assets/all_product';\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < all_product.length; index++) {  \r\n    cart[all_product[index].id] = 0;  \r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: (prev[itemId] || 0) + 1,  \r\n    }));\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: Math.max((prev[itemId] || 0) - 1, 0), \r\n    }));\r\n  };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const item in cartItems)\r\n        {\r\n            if(cartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item))\r\n                totalAmount += itemInfo.new_price * cartItems[item];\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const getTotalCartItems = \r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated Cart:\", cartItems);\r\n  }, [cartItems]);  \r\n\r\n  const contextValue = { getTotalCartAmount,all_product, cartItems, addToCart, removeFromCart };\r\n\r\n  return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMO,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,WAAW,CAACO,MAAM,EAAED,KAAK,EAAE,EAAE;IACvDD,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC,CAACE,EAAE,CAAC,GAAG,CAAC;EACjC;EACA,OAAOH,IAAI;AACb,CAAC;AAED,MAAMI,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACM,cAAc,CAAC,CAAC,CAAC;EAE5D,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC5BF,YAAY,CAAEG,IAAI,KAAM;MACtB,GAAGA,IAAI;MACP,CAACD,MAAM,GAAG,CAACC,IAAI,CAACD,MAAM,CAAC,IAAI,CAAC,IAAI;IAClC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,cAAc,GAAIF,MAAM,IAAK;IACjCF,YAAY,CAAEG,IAAI,KAAM;MACtB,GAAGA,IAAI;MACP,CAACD,MAAM,GAAGG,IAAI,CAACC,GAAG,CAAC,CAACH,IAAI,CAACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;EACL,CAAC;EAEC,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAI,MAAMC,IAAI,IAAIV,SAAS,EAC3B;MACI,IAAGA,SAAS,CAACU,IAAI,CAAC,GAAC,CAAC,EACpB;QACI,IAAIC,QAAQ,GAAGvB,WAAW,CAACwB,IAAI,CAAEC,OAAO,IAAGA,OAAO,CAACjB,EAAE,KAAGkB,MAAM,CAACJ,IAAI,CAAC,CAAC;QACrED,WAAW,IAAIE,QAAQ,CAACI,SAAS,GAAGf,SAAS,CAACU,IAAI,CAAC;MACvD;IACJ;IACA,OAAOD,WAAW;EACtB,CAAC;EAED,MAAMO,iBAAiB,GAEzB7B,SAAS,CAAC,MAAM;IACd8B,OAAO,CAACC,GAAG,CAAC,eAAe,EAAElB,SAAS,CAAC;EACzC,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMmB,YAAY,GAAG;IAAEX,kBAAkB;IAACpB,WAAW;IAAEY,SAAS;IAAEE,SAAS;IAAEG;EAAe,CAAC;EAE7F,oBAAOf,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EAAExB,KAAK,CAACwB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC3F,CAAC;AAAC3B,EAAA,CAvCIF,mBAAmB;AAAA8B,EAAA,GAAnB9B,mBAAmB;AAyCzB,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}